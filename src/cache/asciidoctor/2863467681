<div class="paragraph lead">
<p>In this lab we focus our attention on the art and craft&mdash;the
<a href="https://en.wikipedia.org/wiki/Techne"><em>techne</em></a>&mdash;of programming.
We&#8217;ll do some code reading and talk style; continue developing our algorithmic
chops; and get practice with variable assignment, loops, and counters.
We&#8217;ve also set aside some time to talk <a href="/MP/2/">MP2</a>.</p>
</div>
<div class="sect1">
<h2 id="exercises">1. Written Exercises <span class="text-muted">(40 Minutes)</span></h2>
<div class="sectionbody">
<div class="paragraph lead">
<p>We begin with a set of code reading and writing exercises.</p>
</div>
<div class="paragraph">
<p>Complete this part of the lab in pairs using Google Docs.
Create a copy of <a href="https://goo.gl/XJ1Aur">our document template</a>, and then edit it
to record you and your partner&#8217;s answers.
<strong>Note that you must open this document using your @illinois.edu Google Apps
account.</strong>
We will not grant access to non-Illinois users <sup class="footnote">[<a id="_footnoteref_1" class="footnote" href="#_footnote_1" title="View footnote.">1</a>]</sup>.</p>
</div>
<div class="paragraph">
<p>Have a course staff member check your answers as you go.
When you are done, move on to the next section.</p>
</div>
<hr>
</div>
</div>
<div class="sect1">
<h2 id="scraping">2. Simple Web Scraping <span class="text-muted">(40 Minutes)</span></h2>
<div class="sectionbody">
<div class="paragraph lead">
<p>For the second part of this lab we&#8217;re going to do a quick code writing exercise.
Our goal is to show how easy it is to fetch and process content from the
web&mdash;the most impressive library of text the world has ever created.</p>
</div>
<div class="sect2">
<h3 id="starting">2.1. Creating a New IntelliJ Project</h3>
<div class="row justify-content-center mt-3 mb-3">
  <div class="col-12 col-lg-8">
    <div class="embed-responsive embed-responsive-4by3">
      <iframe class="embed-responsive-item" width="560" height="315" src="//www.youtube.com/embed/tlx5VZfaz5M" allowfullscreen></iframe>
    </div>
  </div>
</div>
<div class="paragraph">
<p>In this lab we&#8217;re going to show you how to create a <em>new</em> IntelliJ project,
rather than using one that we&#8217;ve already set up for you.
Follow the screencast above to learn how to do that&mdash;or just look it up
online.
There are plenty of good instructions out there.</p>
</div>
</div>
<div class="sect2">
<h3 id="_getting_to_the_code_main_code_point">2.2. Getting to the <code>main</code> Point</h3>
<div class="row justify-content-center mt-3 mb-3">
  <div class="col-12 col-lg-8">
    <div class="embed-responsive embed-responsive-4by3">
      <iframe class="embed-responsive-item" width="560" height="315" src="//www.youtube.com/embed/tHt1A_5lvXQ" allowfullscreen></iframe>
    </div>
  </div>
</div>
<div class="paragraph">
<p>Working with our Lab3 project, create a new class.
You can call it anything you like.
Make sure that it has a main method&mdash;we&#8217;ll be using it throughout the lab.
IntelliJ has a way to create a command line app that will add this function for
you, or you can add it later.
Refer to the screencast above for guidance about how to create a new class in
IntelliJ.
<strong>And make sure to add version control to your project as well, also as shown in
the screencast above.</strong>
Ask a neighbor or a staff member for help if you need it.</p>
</div>
</div>
<div class="sect2">
<h3 id="_a_bit_of_help">2.3. A Bit of Help</h3>
<div class="paragraph">
<p>Our goal is to give you the chance to process web content as strings.
You could very easily find out how to do this online, probably discovering the
<a href="https://stackoverflow.com/questions/4328711/read-url-to-string-in-few-lines-of-java-code">same advice that our approach is based on</a>.</p>
</div>
<div class="paragraph">
<p>But, to speed the plow a bit, we&#8217;re going to provide you with a helper function.
Cut and paste the following function into the class you created above.
Don&#8217;t put it <em>inside</em> the main method&mdash;make it a separate function.
<strong>Also note that the <code>import</code> statements have to go at the top of your file, not
at the same level as the new function.</strong></p>
</div>
<script
src="https://gist.github.com/gchallen/9dbbd5eb426f34b03cf507985d5fc722.js"></script>
<div class="sect3">
<h4 id="_nothing_is_magic">2.3.1. Nothing is magic</h4>
<div class="paragraph">
<p><strong>You don&#8217;t need to understand this code&mdash;just be able to use it.</strong>
But here&#8217;s an explanation for the curious <sup class="footnote">[<a id="_footnoteref_2" class="footnote" href="#_footnote_2" title="View footnote.">2</a>]</sup>:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>Lines 1&ndash;3</strong>: import the parts of the Java standard library that we need.</p>
</li>
<li>
<p><strong>Lines 12&ndash;17</strong>: we allocate a new
<a href="https://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html">Scanner</a>
object (Line 12) and then initialize it (Line 14).</p>
</li>
<li>
<p><strong>Line 14</strong>:
<a href="https://docs.oracle.com/javase/7/docs/api/java/net/URL.html#openStream()">URL.openStream</a>
can throw several kinds of exceptions.
Normally we&#8217;d let the caller handle them, but in this case we&#8217;ll suppress them
and return an empty string on error (Line 16).</p>
</li>
<li>
<p><strong>Line 18</strong>: now we have to convert the contents to a string.
<a href="https://community.oracle.com/blogs/pat/2004/10/23/stupid-scanner-tricks">This
post</a> explains a bit of the "\\A" part, which I don&#8217;t fully understand but it
seems to work.</p>
</li>
<li>
<p><strong>19&ndash;20</strong>: Then we close our urlScanner to avoid a resource leak and return the string
contents.</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_word_counting">2.4. Word Counting</h3>
<div class="paragraph">
<p>Once you have our <code>urlToString</code> function integrated into your code, test it out
using <code>System.out.println</code>.
Here are some URLs that may be interesting to try.
Note that they all return raw text, rather than the
<a href="https://en.wikipedia.org/wiki/HTML">HTML</a> that you are using to seeing online.
But you should also experiment with some HTML pages, like
<a href="https://cs.illinois.edu/">this one</a>.</p>
</div>
<div class="openblock spelling_exception">
<div class="content">
<div class="ulist">
<ul>
<li>
<p><a href="http://erdani.com/tdpl/hamlet.txt">http://erdani.com/tdpl/hamlet.txt</a></p>
</li>
<li>
<p><a href="https://www.bls.gov/tus/charts/chart9.txt">https://www.bls.gov/tus/charts/chart9.txt</a></p>
</li>
<li>
<p><a href="http://tgftp.nws.noaa.gov/data/raw/fz/fzus53.klot.srf.lot.txt">http://tgftp.nws.noaa.gov/data/raw/fz/fzus53.klot.srf.lot.txt</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="paragraph">
<p>Now, for each of the pages above, compute a <em>word count</em>.
Your class should compute the total number of words on the page.</p>
</div>
<div class="paragraph">
<p><strong>We are intentionally not giving you a lot of help with this part of the lab.</strong>
But don&#8217;t get discouraged!
Look around for help online, ask your neighbor, and be sure to ask your TA and
doyen for help as well.</p>
</div>
<div class="sect3">
<h4 id="_counting_one_word">2.4.1. Counting One Word</h4>
<div class="paragraph">
<p>Now modify your code above so that it looks for and counts occurrences of a
specific word, which you can define as a constant in your code.
For example, how many times does the word "Prince" appear in
<a href="http://erdani.com/tdpl/hamlet.txt">Hamlet</a>?
Can you make your new function case-insensitive, so that "Prince" and "prince"
are counted as the same word?</p>
</div>
</div>
<div class="sect3">
<h4 id="_challenge_unique_word_counting">2.4.2. Challenge: Unique Word Counting</h4>
<div class="paragraph">
<p>If you get your word counting done with time to spare, try changing it so it
counts the number of <em>unique</em> words in each file.
For example, the number of words in "this is a string is a string" is 7, but the
number of <em>unique</em> words is 4.</p>
</div>
<div class="paragraph">
<p>Completing this part of the lab will probably require you explore advanced Java
data structures that you will not see for a while in this course.
But give it a shot if you get here with time to spare.</p>
</div>
</div>
</div>
<div class="sect2">
<h3 id="push">2.5. Saving Your Work</h3>
<div class="row justify-content-center mt-3 mb-3">
  <div class="col-12 col-lg-8">
    <div class="embed-responsive embed-responsive-4by3">
      <iframe class="embed-responsive-item" width="560" height="315" src="//www.youtube.com/embed/QWu66Qxn06E" allowfullscreen></iframe>
    </div>
  </div>
</div>
<div class="paragraph">
<p>To complete Lab 3, you&#8217;ll learn how to create a new empty GitHub repository, add
it to your project, and push your code to it.
Note that, unlike your MPs, this repository can be public.
Follow the screencast above to learn how to do this.</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="mp2">3. Help with MP2 <span class="text-muted">(20 Minutes)</span></h2>
<div class="sectionbody">
<div class="paragraph">
<p>Use any remaining time in your lab section to get help with <a href="/MP/2/">MP2</a>.
If you are done or making good progress, please help others&mdash;but help them
<em>learn</em>, don&#8217;t just give them the answers.
And if you are behind, please reach out the course staff for help.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="done">4. Before You Leave</h2>
<div class="sectionbody">
<div class="paragraph">
<p><strong>Don&#8217;t leave lab until</strong>:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>You&#8217;ve completed the entire <a href="https://goo.gl/XJ1Aur">handout</a></p>
</li>
<li>
<p>You&#8217;ve finished the <a href="#scraping">web scraping exercise</a></p>
</li>
<li>
<p>You&#8217;ve pushed your work to GitHub and showed a TA or CA</p>
</li>
<li>
<p>You&#8217;ve considered sticking around for a few minutes to help
others&mdash;either with the lab or with <a href="/MP/2/">MP2</a></p>
</li>
</ol>
</div>
</div>
</div>
<div id="footnotes">
<hr>
<div class="footnote" id="_footnote_1">
<a href="#_footnoteref_1">1</a>. One of these weeks we&#8217;re going to say this and <em>not</em> get a bunch of requests to share the document to Gmail addresses. Maybe this week?
</div>
<div class="footnote" id="_footnote_2">
<a href="#_footnoteref_2">2</a>. And this is just about as easy as anything gets in Java&#8230;&#8203;
</div>
</div>