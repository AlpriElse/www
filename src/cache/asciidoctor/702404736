<div class="sect1">
<h2 id="tEtREXcdwvLNenEEApUWWxYcIyInPqrh">!</h2>
<div class="sectionbody">
<div class="openblock janini small">
<div class="content">
<div class="message">Practice with Functions and Strings</div>
<div class="literalblock">
<div class="content">
<pre>String[] courses = { "CS 125", "CS 225", "CS 241" };
static void bestCourse(String[] options) {
  for (String course: options) {
    System.out.print(course);
    if (course.contains("125")) {
      System.out.print(" is the best");
    }
    System.out.println();
  }
}
bestCourse(courses);</pre>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect1 oneword">
<h2 id="QXeDdtoIJghFLWgVVxlLDTyJGYnfkMyM">Algorithmic Thinking and Problem Solving</h2>
<div class="sectionbody">

</div>
</div>
<div class="sect1 oneword">
<h2 id="BujyetipnNDrtCDwOkrBiiTJbXjxHwVu">But First: More About Functions</h2>
<div class="sectionbody">

</div>
</div>
<div class="sect1">
<h2 id="WYGKDMJrYLPMExMvDrlPcHvhJXJULrdT">Java Method Overloading</h2>
<div class="sectionbody">
<div class="paragraph lead">
<p>I told you that functions couldn&#8217;t have the same name.</p>
</div>
<div class="openblock s">
<div class="content">
<div class="paragraph">
<p><strong>I lied.</strong></p>
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="iJVMrRgNoMDSQndAuhyBGsxwipXUxmyY">! Bad Professor</h2>
<div class="sectionbody">
<div class="embed-responsive embed-responsive-4by3">
  <iframe class="full embed-responsive-item" src="https://www.usnews.com/education/blogs/professors-guide/2010/01/06/10-warning-signs-of-a-bad-professor"></iframe>
</div>
</div>
</div>
<div class="sect1">
<h2 id="wswjWrauPrlUigRkLcyzcewZsvsCXVAL">! Java Method Overloading</h2>
<div class="sectionbody">
<div class="literalblock janini small">
<div class="content">
<pre>static int sum(int first, int second) {
  return first + second;
}
static double sum(double first, double second) {
  return first + second;
}
System.out.println(sum(10, 20));
System.out.println(sum(10.0, 20.0));
System.out.println("WTF?!");</pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="hMOkqKTcxmOlCMscnAhDrISCCrbmuKSA">Java Method Overloading</h2>
<div class="sectionbody">
<div class="paragraph lead">
<p>Java uses <em>both</em> the function name <em>and</em> the the list of arguments and types to
determine which function to call.</p>
</div>
<div class="paragraph">
<p>Together they are called the <em>function signature</em>.</p>
</div>
<div class="olist arabic s">
<ol class="arabic">
<li>
<p><strong>Does the function have the right name?</strong></p>
</li>
<li>
<p><strong>Does the function take the right arguments in the right order?</strong></p>
</li>
<li>
<p>Java will also try to convert types to find a match as long as no loss of
precision occurs</p>
</li>
</ol>
</div>
</div>
</div>
<div class="sect1">
<h2 id="gSVpdvguUsItuviFdwvmyPOhnMVwlErX">! Java Method Overloading</h2>
<div class="sectionbody">
<div class="literalblock janini small">
<div class="content">
<pre>static int sum(int first, int second) {
  System.out.println("Summing ints");
  return first + second;
}
static double sum(double first, double second) {
  System.out.println("Summing doubles");
  return first + second;
}
System.out.println(sum(10, 20));
System.out.println(sum(10.0, 20.0));</pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="uHxLfZRUUSeKHKZXVkQEndWETbAOgXOj">Function Input Validation</h2>
<div class="sectionbody">
<div class="paragraph lead">
<p>A common function design pattern is to <em>check your inputs at the top</em>.</p>
</div>
<div class="paragraph">
<p>Think about all the bad inputs you could possibly get from the caller.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-java" data-lang="java">int sum(int[] numbers) {
  // check numbers to make sure it's sane
}</code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="IvXkDdLRgNBLsSBPsbafXVMWXMQbkIQF">! Function Input Validation</h2>
<div class="sectionbody">
<div class="literalblock janini small">
<div class="content">
<pre>static int sum(int[] numbers) {
  // check numbers to make sure it's sane
}</pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="yBXWpiIYZpCTIiwedPUiflmeXRDXXbyM"><code>null</code> Arrays</h2>
<div class="sectionbody">
<div class="paragraph lead">
<p>What is the value of array declared below?</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-java" data-lang="java">int[] output = null;
System.out.println(output);</code></pre>
</div>
</div>
<div class="ulist s">
<ul>
<li>
<p>Java has a special value that can be used to indicate that an object has not
been initialized: <code>null</code>.</p>
</li>
<li>
<p><code>null</code> is not a valid object: it has no properties or methods that you can
use.</p>
</li>
<li>
<p>Attempts to use <code>null</code> will result in an error</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="EaGRLETbzDaduqdILxVMZGtholIVxhZu">! <code>null</code> Arrays</h2>
<div class="sectionbody">
<div class="literalblock janini">
<div class="content">
<pre>int[] output = null;
System.out.println(output);
System.out.println(output.length);</pre>
</div>
</div>
</div>
</div>
<div class="sect1 oneword">
<h2 id="MtRsCbMHmLhOLCCaHMlzRjbUaAvypYeW">Defensive Programming 101</h2>
<div class="sectionbody">
<div class="paragraph lead">
<p><strong>Always check objects for <code>null</code>.</strong></p>
</div>
</div>
</div>
<div class="sect1 oneword">
<h2 id="bFVBvhmjufzGfxvxxruaPuBSduFKcJlu">Let&#8217;s Solve Some Problems!</h2>
<div class="sectionbody">

</div>
</div>
<div class="sect1">
<h2 id="nXJaqYifBIRupMOUvdurSxJJtMqOMjnO">Consecutive Identical Values</h2>
<div class="sectionbody">
<div class="paragraph lead">
<p>Given a string, write a function to find all cases where consecutive characters
are the same.</p>
</div>
<div class="paragraph">
<p><strong>First, what is our algorithm?</strong></p>
</div>
<div class="olist arabic s">
<ol class="arabic">
<li>
<p>Examine each character in the array</p>
</li>
<li>
<p>Compare it with the next character&mdash;but how do we get at that?</p>
</li>
<li>
<p>Print it out if they are the same</p>
</li>
</ol>
</div>
</div>
</div>
<div class="sect1">
<h2 id="myIIGowgWcgYdJyAHTrrOBJNehWuJjkr">! Consecutive Identical Characters</h2>
<div class="sectionbody">
<div class="literalblock janini small">
<div class="content">
<pre>// Print consecutive identical characters
String toSearch = "abcdefeffh";</pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="OEzuTpurwrhHSauViYyTwSIyybNxVVVz">! Read The Documentation</h2>
<div class="sectionbody">
<div class="embed-responsive embed-responsive-4by3">
  <iframe class="full embed-responsive-item" src="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html"></iframe>
</div>
</div>
</div>
<div class="sect1">
<h2 id="agRjmuPXNFgsskQjpuMryxBeLimsaExA">Testing</h2>
<div class="sectionbody">
<div class="paragraph lead">
<p>Test cases are an indispensable part of modern software development.</p>
</div>
<div class="ulist s">
<ul>
<li>
<p>To perform a simple test, pick a input that you know the answer to and check
that your function returns the expected value.</p>
</li>
<li>
<p>Try to pick cases that are hard and where you might not get the right
answer&mdash;we call these <em>corner cases</em>.</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="DiVVcOhkSBTwKHQcrnPQCRTjBuzasxRF">Announcements</h2>
<div class="sectionbody">
<div class="ulist">
<ul>
<li>
<p>Quiz 2 starts today in the CBTF. It covers arrays, functions, and strings.</p>
</li>
<li>
<p>The fifth set of Turing&#8217;s Craft exercises (TC 5) will be out shortly and due
<strong>Sunday</strong> by midnight.</p>
</li>
<li>
<p><a href="/MP/1/">MP1</a> is due today!
<a href="https://cs125.cs.illinois.edu/info/resources/#hours">Office hours</a>
until 5PM today.</p>
</li>
<li>
<p>MP2 will be out today and due next week&mdash;it&#8217;s another new challenge.</p>
</li>
</ul>
</div>
</div>
</div>