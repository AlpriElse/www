<div class="paragraph lead">
<p>Computers are frequently used to <em>transform</em> and <em>analyze</em> data.
Rendering web pages, playing music, displaying video, compressing files, and
graphing data are all examples that involve either transformation, analysis, and
sometimes both.</p>
</div>
<div class="paragraph">
<p>MP3 comprises two string-based tasks that involve straightforward transformation
and analysis tasks.
<strong>It is due Friday, October 6th, 2017 @ 5PM. To receive full credit, you must
submit by this deadline.</strong>
In addition, 10% of your grade on MP3 is for committing code that earns at least
<em>20 points</em> by <strong>Tuesday, October 3rd, 2017 @ 5PM.</strong></p>
</div>
<div class="sect1">
<h2 id="objectives">1. Learning Objectives</h2>
<div class="sectionbody">
<div class="paragraph">
<p>The purpose of MP3 is to begin to introduce you to data processing, including
both transformation and analysis.
You&#8217;ll begin to learn how to:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>programmatically transform strings by implementing both simple encryption and
decryption</p>
</li>
<li>
<p>complete a simple (but useful) cryptography-related data analysis task</p>
</li>
<li>
<p>write Javadoc comments</p>
</li>
<li>
<p>not start the MP at the last minute</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>We&#8217;ll also continue to reinforce the learning objectives from <a href="/MP/2017/fall/1/">MP1</a>
and <a href="/MP/2017/fall/2/">MP2</a>.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="structure">2. Assignment Structure</h2>
<div class="sectionbody">
<div class="paragraph">
<p>MP3 consists of two short programs:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p><a href="https://cs125-illinois.github.io/Fall-2017-MP3/CaesarCipher.html"><code>CaesarCipher.java</code></a>:
encrypts and decrypts text using the so-called
<a href="https://en.wikipedia.org/wiki/Caesar_cipher">Caesar Cipher</a></p>
</li>
<li>
<p><a href="https://cs125-illinois.github.io/Fall-2017-MP3/CharDistribution.html"><code>CharDistribution.java</code></a>:
parses text and computes the distribution of each of the alphabetic characters</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>You may find our official
<a href="https://cs125-illinois.github.io/Fall-2017-MP3/">MP3 online documentation</a>
helpful in understanding what each function is supposed to do.</p>
</div>
<div class="sect2">
<h3 id="getting">2.1. Obtaining MP3</h3>
<div class="paragraph">
<p>Please follow the instructions from <a href="/MP/2017/fall/1/#getting">MP1</a>.
You&#8217;ll find MP3 in an <code>MP3</code> folder in your Subversion home directory.
Unless you want to learn a lot more about Subversion, <strong>do not delete your MP3
folder once you have it.</strong></p>
</div>
</div>
<div class="sect2">
<h3 id="requirements">2.2. Your Goal</h3>
<div class="paragraph">
<p>At this point you should be familiar with the requirements from
<a href="/MP/2017/fall/1/#requirements">MP1</a> and <a href="/MP/2017/fall/2/#requirements">MP2</a>.
MP3 is similar.
The only small difference with MP3 is in the grading, so <a href="#grading">see below</a>.</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="approach">3. Fixing Problems</h2>
<div class="sectionbody">
<div class="paragraph">
<p>All of the <a href="/MP/2017/fall/1/#approach">MP1</a> and <a href="/MP/2017/fall/2/#approach">MP2</a> about how to
approach the MPs still apply.
But as usual, we&#8217;ll furnish your continued development as programmers with some
additional advice&mdash;this time about <em>fixing problems</em>.</p>
</div>
<div class="paragraph">
<p>We&#8217;ve all been there.
My stupid code is not working!
Why not?
I&#8217;m angry, I&#8217;m frustrated, I want to throw my computer through a window or stomp
it to bits.
<strong>What should you do?</strong></p>
</div>
<div class="sect2">
<h3 id="_calm_down">3.1. Calm Down</h3>
<div class="paragraph">
<p>Well, the first thing to do is <em>calm down</em>.
This can be a good time to get a cup of coffee, take a walk, engage in some
<a href="https://www.youtube.com/watch?v=5dsGWM5XGdg">YouTube browsing</a>,
catch up on email, or whatever
<sup class="footnote">[<a id="_footnoteref_1" class="footnote" href="#_footnote_1" title="View footnote.">1</a>]</sup>
Get your head out of what you are doing for a few minutes and you&#8217;ll be fresher
when you get back.</p>
</div>
</div>
<div class="sect2">
<h3 id="_accept_responsibility">3.2. Accept Responsibility</h3>
<div class="paragraph">
<p>Second, accept that something is <em>wrong with your code</em>.
If it&#8217;s not doing what you want, then that&#8217;s obvious.
And for CS 125, the test suites are the arbiters of correctness.
So if you aren&#8217;t passing them, then your code is incorrect.
Period.</p>
</div>
</div>
<div class="sect2">
<h3 id="_do_a_slow_close_read">3.3. Do A Slow, Close Read</h3>
<div class="paragraph">
<p>Now that you&#8217;re calmer and ready to find your mistakes, go through your code
carefully line by line.
This can be a good time to do some cleanup&mdash;add comments where needed,
improve your variable names, get all of your indentation and formatting worked
out, etc.
Sometimes looking at your code in a slightly different way causes a bug to
become apparent.
And you might as well be doing other useful tasks as you do your close read.</p>
</div>
<div class="paragraph">
<p>During your first slow read it can be helpful to actually read code out loud, or
at least in your head so that you don&#8217;t bother others around you.
For example, if you&#8217;re examining the code below:</p>
</div>
<script
src="https://gist.github.com/gchallen/b6ff23b1c26659f920e8a71026816c42.js"></script>
<div class="paragraph">
<p>You might say:</p>
</div>
<div class="olist arabic spelling_exception">
<ol class="arabic">
<li>
<p>"For every index value of searchArray" (you want to develop a shorthand for
loops)</p>
</li>
<li>
<p>"If the index member of anotherArray is equal to what I&#8217;m search for"</p>
</li>
<li>
<p>"Then break."</p>
</li>
<li>
<p>"But wait, why am I using an index from searchArray to look in anotherArray?
That&#8217;s probably wrong."</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>This is a place where it <em>really</em> helps to use variable names that aren&#8217;t <code>i</code>
and <code>j</code>, and to pull the current value of arrays into a local variable
immediately or use the
<a href="https://blogs.oracle.com/corejavatechtips/using-enhanced-for-loops-with-your-classes">new
enhanced <code>for</code> loop syntax</a>.</p>
</div>
</div>
<div class="sect2">
<h3 id="_add_instrumentation">3.4. Add Instrumentation</h3>
<div class="paragraph">
<p>Once you&#8217;ve completed one pass, start over and begin adding some print
statements.
This is sometimes called <code>printf</code> <em>debugging</em>, after the
<a href="https://www.tutorialspoint.com/c_standard_library/c_function_printf.htm">C
language <code>printf</code> statement</a>&mdash;its
equivalent to <code>System.out.println</code> in Java.
In Java, of course, you would use <code>System.out.println</code> to do this.</p>
</div>
<div class="paragraph">
<p>You will find that there are snobs out there that look down on <code>printf</code>
debugging.
Hook up a real debugger, they&#8217;ll say.
(Don&#8217;t worry: we&#8217;ll get there.)
Or rewrite your entire project using a functional programming language where
bugs are impossible&mdash;as if that&#8217;s a real possibility.</p>
</div>
<div class="paragraph">
<p>And then there are the rest of use that just want to build cool and useful
things as quickly as possible, and who will <em>happily</em> take the chance to add
instrumentation as needed.
<code>printf</code> debugging is not powerful enough to solve every problem, and there are
times that you will need better tools.
But use it when you can.
And remind the snobs what none other than
<a href="https://en.wikipedia.org/wiki/Brian_Kernighan">Brian Kernighan</a> says:</p>
</div>
<div class="quoteblock">
<blockquote>
<div class="paragraph">
<p>The most effective debugging tool is still careful thought, coupled with
judiciously placed print statements.</p>
</div>
</blockquote>
<div class="attribution">
&#8212; <a href="https://stackoverflow.com/a/238686">Brian Kernighan</a>
</div>
</div>
<div class="paragraph">
<p>Usually the right approach is to start at the top of the block of code that you
are examining and use <code>System.out.println</code> to examine things that you are unsure
are working properly.
This is particularly useful when used in conjunction with test suites.</p>
</div>
</div>
<div class="sect2">
<h3 id="_consider_a_different_approach">3.5. Consider A Different Approach</h3>
<div class="paragraph">
<p>If you are really stuck, it might be time to try a different approach.
This is particularly true when you can acknowledge that your current approach
has some, shall we say, limitations.
Maybe you thought that this particular way of doing things would work out well,
but then you had to add one hacky bit, and another.
And now it&#8217;s rapidly approaching spaghetti code that you&#8217;re not even sure that
you understand anymore.</p>
</div>
<div class="paragraph">
<p>In that case, by all means start over!
You&#8217;re learning, and you&#8217;ll learn more by completing a few alternative
implementations than you will by clinging to an ugly solution.
Feel free to talk to another student&mdash;<a href="#cheating"><em>In
English</em></a>&mdash;about how they approached the problem.
Maybe they found a much cleaner way that you can try.</p>
</div>
</div>
<div class="sect2">
<h3 id="_getting_help">3.6. Getting Help</h3>
<div class="paragraph">
<p>The course staff is ready and willing to help you every step of the way!
Please come to <a href="/info/2017/fall/syllabus/#calendar">office hours</a>, or post (in the
right place) on the
<a href="https://cs125-forum.cs.illinois.edu" class="noexternal">forum</a> when you need help.
You should also feel free to help each other, as long as you do not violate the
<a href="#cheating">academic integrity requirements</a>.</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="grading">4. Grading</h2>
<div class="sectionbody">
<div class="paragraph">
<p>MP3 is worth 100 points total, broken down as follows:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p><strong>40 points</strong>: <code>CaesarCipher.java</code></p>
<div class="ulist">
<ul>
<li>
<p><strong>10 points</strong> for submitting code that compiles</p>
</li>
<li>
<p><strong>30 points</strong> for passing the test</p>
</li>
</ul>
</div>
</li>
<li>
<p><strong>40 points</strong>: <code>CharDistribution.java</code></p>
<div class="ulist">
<ul>
<li>
<p><strong>10 points</strong> for submitting code that compiles</p>
</li>
<li>
<p><strong>40 points</strong> for passing the test</p>
</li>
</ul>
</div>
</li>
<li>
<p><strong>10 points</strong> for no <code>checkstyle</code> violations</p>
</li>
<li>
<p><strong>10 points</strong> for committing code that earns at least 20 points before <strong>Tuesday,
October 3rd, 2017 @ 5PM.</strong></p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Programming is a skill, and you learn it with regular consistent practice.
If you wait until the day of the deadline, it&#8217;s unlikely that you&#8217;ll get as much
practice and learn as much as if you start early.
When you give yourself enough time to complete the MP, you can also slow down,
enjoy yourself, and do things right.
Take a few extra minutes to learn more about a library that you&#8217;re using, or
clean up your code so that it really shines.
The earlier you start, the more likely you&#8217;ll do some of these useful things.</p>
</div>
<div class="paragraph">
<p>So, we&#8217;re going to incentive you starting on time.
10% of MP3 is earned by submitting something that earns 20 points by <strong>Tuesday,
October 3rd, 2017 @ 5PM.</strong>
You don&#8217;t have to do much to get 20 points, but we hope that it will get you
reading and think about the MP before the end of the week, when office hours are
packed.</p>
</div>
<div class="sect2">
<h3 id="testing">4.1. Test Cases</h3>
<div class="paragraph">
<p>Like <a href="/MP/2017/fall/1/">MP1</a> and <a href="/MP/2017/fall/2/">MP2</a>, we have provided exhaustive test cases
for each part of MP3.
Please review the <a href="/MP/2017/fall/1/#testing">MP1 testing instructions</a>.</p>
</div>
</div>
<div class="sect2">
<h3 id="autograding">4.2. Autograding</h3>
<div class="paragraph">
<p>Like <a href="/MP/2017/fall/1/">MP1</a> and <a href="/MP/2017/fall/2/">MP2</a>, we have provided you with an
autograding script that you can use to estimate your current grade as often as
you want.
The Eclipse project contains a launcher that will run MP3 autograder.
Note, however, that unlike previous assignments, the local autograder can only
calculate 90 out of your 100 total points.
This is because it can&#8217;t tell if you have committed the required code before the
deadline to earn the 10 "start the assignment on time" points
<sup class="footnote">[<a id="_footnoteref_2" class="footnote" href="#_footnote_2" title="View footnote.">2</a>]</sup>.</p>
</div>
<div class="paragraph">
<p>Unless you have modified the test cases or autograder configuration files, the
autograding output should equal the score that you will earn when you submit.
<strong>If you modify our test cases or the autograding configuration, all bets are
off.</strong></p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="submitting">5. Submitting Your Work</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Overall you should refer to <a href="/MP/setup/subversion">our instructions for using
Subversion</a>.
Commit early and often!
You only earn credit for the version of your code that is committed to your
repository, so ensure that we have your best submission before the deadline.</p>
</div>
<div class="paragraph">
<p>And remember, you must commit something that earns 20 points before <strong>Tuesday,
October 3rd, 2017 @ 5PM</strong> to earn 10 points on the assignment.</p>
</div>
<div class="sect2">
<h3 id="cheating">5.1. Academic Integrity</h3>
<div class="paragraph">
<p>Please review the <a href="/MP/2017/fall/1/">MP1 academic integrity guidelines</a>.</p>
</div>
</div>
</div>
</div>
<div id="footnotes">
<hr>
<div class="footnote" id="_footnote_1">
<a href="#_footnoteref_1">1</a>. I don&#8217;t recommend smoking, however, since it&#8217;s unhealthy and habit forming. I found out the hard way.
</div>
<div class="footnote" id="_footnote_2">
<a href="#_footnoteref_2">2</a>. Well, it probably could find this out, but this would require that everyone install the Subversion command line client, and I don&#8217;t want to go there.
</div>
</div>