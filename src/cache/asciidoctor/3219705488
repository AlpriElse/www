<div class="sect1">
<h2 id="pgYMuWIZOClhbnKQazmcPUWjaySoCIar">!</h2>
<div class="sectionbody">
<div class="openblock janini smallest compiler">
<div class="content">
<div class="message">Linked Lists</div>
<div class="literalblock">
<div class="content">
<pre>public class Item {
  public int value;
  public Item next;
  Item(int setValue, Item setNext) {
    this.value = setValue;
    this.next = setNext;
  }
}
public class LinkedList {
  private Item start;
  public int get(int index) {
    Item current = start;
    for (int i = 0; i &lt; index; i++) {
      current = current.next;
    }
    return current.value;
  }
}
public class Example {
  public static void main(String[] unused) {
  }
}</pre>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect1 oneword">
<h2 id="ZcSyAWnnkkSqpuXrEGLIRzspjCMTqMDZ">No Professor Of The Day Award For Me</h2>
<div class="sectionbody">
<div class="paragraph">
<p>(At least not today.)</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="rJOxXOGNaQrhuLzoqiKfoeSvEbCZcvww">Lecture Participation Reminder</h2>
<div class="sectionbody">
<div class="paragraph lead">
<p>Lecture participation scores will be up later today.
<strong>Some of you will be unhappy.</strong></p>
</div>
<div class="paragraph">
<p>Our participation tracking algorithm is <em>very</em> generous. But, to earn
participation credit, you need:</p>
</div>
<div class="ulist s">
<ul>
<li>
<p><strong>To be in the right place.</strong> No points for attending the wrong lecture.</p>
</li>
<li>
<p><strong>To be following along with the slides.</strong> No points for just being logged in.</p>
</li>
<li>
<p>Questions?</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="mtewUULnaMvHglEMtJNEctwLkKXbHVqt">Cheating</h2>
<div class="sectionbody">
<div class="paragraph lead">
<p>I take academic integrity extremely seriously.
Cheaters will be caught and punished.</p>
</div>
<div class="paragraph">
<p>We&#8217;ve begun checking submissions for plagiarism.</p>
</div>
<div class="ulist s">
<ul>
<li>
<p>99% of you are fine. <strong>Thanks for being honest and working hard.</strong></p>
</li>
<li>
<p>1% of you are not fine. <strong>You&#8217;ll be hearing from us.</strong></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1 oneword">
<h2 id="eHRxJUhDLukJpzNYHmPYdwCshvuiEpya">Course Policies Questions?</h2>
<div class="sectionbody">
<div class="paragraph">
<p>We have good reasons for the choices we&#8217;ve made about how the course is set up.
But there are always tradeoffs. I&#8217;m happy to discuss.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="HwVpzjiKlFDIqWjicoyRqrHirVqKCEvl">Remainder of the Semester</h2>
<div class="sectionbody">
<div class="paragraph lead">
<p>In happier news, here&#8217;s what we have on tap for the rest of the semester.</p>
</div>
<div class="ulist s">
<ul>
<li>
<p>MP5: out Friday, due after Spring Break.</p>
</li>
<li>
<p>After break: MP6 and MP7, one week MPs on Android development and API usage.</p>
</li>
<li>
<p>2.5 week final project, done in pairs, due in the last lab.</p>
</li>
<li>
<p><strong>CS 125 Fair</strong>: held on Reading Day, optional (but worth 1% extra credit),
highlights chosen in lab.</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="yIksCGacXTpEUsZJulwkCHBpwsvWMNFp">Q6 Review: Terminology</h2>
<div class="sectionbody">
<div class="listingblock smallest">
<div class="content">
<pre class="highlight"><code class="language-java" data-lang="java">class Parent { }
class Child extends Parent { }</code></pre>
</div>
</div>
<div class="paragraph">
<p>In Java, any method that will accept an instance of <code>Parent</code> will also accept an
instance of <code>Child</code>. This is due to&#8230;&#8203;</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="gYbroZRyPeylyRcTrRpQrGjbrWCeOXEr">Q6 Review: Object Casting</h2>
<div class="sectionbody">
<div class="listingblock smallest">
<div class="content">
<pre class="highlight"><code class="language-java" data-lang="java">public class Top {
  public static void printOne(Top top) {
    Bottom bottom = (Bottom) top;
    bottom.print();
  }
  public void print() {
    System.out.println("Top");
  }
}
public class Bottom extends Top {
  public void print() {
    System.out.println("Bottom");
  }
}
public class Example {
  public static void main(String[] unused) {
    Top top = new Top();
    Top.printOne(top);
  }
}</code></pre>
</div>
</div>
<div class="paragraph">
<p>When the <code>main</code> method runs, what will be printed?</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="HSVhcAvjRKzeCPcLEVVjOyYZngrXrGlM">! Q6 Review: Object Casting</h2>
<div class="sectionbody">
<div class="literalblock janini compiler smallest">
<div class="content">
<pre>public class Top {
  public static void printOne(Top top) {
    Bottom bottom = (Bottom) top;
    bottom.print();
  }
  public void print() {
    System.out.println("Top");
  }
}
public class Bottom extends Top {
  public void print() {
    System.out.println("Bottom");
  }
}
public class Example {
  public static void main(String[] unused) {
    Top top = new Top();
    Top.printOne(top);
  }
}</pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="drGfkPQUuIWlQbKrBMzouxWqWQEOivkK">Q6 Review: References</h2>
<div class="sectionbody">
<div class="listingblock smallest">
<div class="content">
<pre class="highlight"><code class="language-java" data-lang="java">public class Car {
  public int odometer;
  public Car(int initialOdometer) {
    odometer = initialOdometer;
  }
  public int increaseMileage() {
    return odometer++;
  }
}
public class Example {
  public static void main(String[] unused) {
    Car[] cars = new Car[10];
    Car car = new Car(10);
    for (int i = 0; i &lt; cars.length; i++) {
      cars[i] = car;
    }
    for (int i = 0; i &lt; cars.length; i++) {
      cars[i].increaseMileage();
    }
    System.out.println(cars[0].odometer);
  }
}</code></pre>
</div>
</div>
<div class="paragraph">
<p>When the <code>main</code> method runs, what will be printed?</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="aVHprWTYNpzLYYXgewmOZeORloIAGRRB">! Q6 Review: References</h2>
<div class="sectionbody">
<div class="literalblock janini compiler smallest">
<div class="content">
<pre>public class Car {
  public int odometer;
  public Car(int initialOdometer) {
    odometer = initialOdometer;
  }
  public int increaseMileage() {
    return odometer++;
  }
  public boolean equals(Car other) {
    return odometer == other.odometer;
  }
}
public class Example {
  public static void main(String[] unused) {
    Car[] cars = new Car[10];
    Car car = new Car(10);
    for (int i = 0; i &lt; cars.length; i++) {
      cars[i] = car;
    }
    for (int i = 0; i &lt; cars.length; i++) {
      cars[i].increaseMileage();
    }
    System.out.println(cars[0].odometer);
  }
}</pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="LcyEAmVtUdcHjdXtILAeYWjLVFHCYoLE">Q6 Review: Polymorphism</h2>
<div class="sectionbody">
<div class="listingblock smallest">
<div class="content">
<pre class="highlight"><code class="language-java" data-lang="java">public class Shape {
  public String toString() {
    return "Shape";
  }
}
public class FourSides extends Shape {
  public String toString() {
    return "FourSides";
  }
}
public class Example {
  public static void main(String[] unused) {
    FourSides s = new Shape();
    System.out.println(s);
  }
}</code></pre>
</div>
</div>
<div class="paragraph">
<p>When the <code>main</code> method above runs, what will be printed?</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="fNGgzyoKhumeyEtMqZgwOMgVXpiCilEK">! Q6 Review: Polymorphism</h2>
<div class="sectionbody">
<div class="literalblock janini compiler smallest">
<div class="content">
<pre>public class Shape {
  public String toString() {
    return "Shape";
  }
}
public class FourSides extends Shape {
  public String toString() {
    return "FourSides";
  }
}
public class Example {
  public static void main(String[] unused) {
    FourSides s = new Shape();
    System.out.println(s);
  }
}</pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="vDfnzUuMOuMRHAAdncCKUaciSuZDBygs">Q6 Review: Garbage Collection</h2>
<div class="sectionbody">
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-java" data-lang="java">public class Example {
  public static void main(String[] unused) {
    String[] strings = new String[10];
    for (int i = 0; ; i++) {
      strings[i % 10] = new String();
    }
  }
}</code></pre>
</div>
</div>
<div class="paragraph">
<p>After the code above runs for a while, how many valid <code>String</code> objects will
exist in the system?</p>
</div>
</div>
</div>
<div class="sect1 ss">
<h2 id="VgYgAHgZIcREUpqGNdxTklOAGrPTRLtU">Linked Lists</h2>
<div class="sectionbody">
<div class="listingblock smaller">
<div class="content">
<pre class="highlight"><code class="language-java" data-lang="java">public class Item {
  public int value;
  public Item next;
  Item(int setValue, Item setNext) {
    this.value = setValue;
    this.next = setNext;
  }
}</code></pre>
</div>
</div>
<div style="page-break-after: always;"></div>
</div>
</div>
<div class="sect1 ss">
<h2 id="bPzPQuXqzJCYzMTEVwglDCplYhvLWJnQ">Linked Lists</h2>
<div class="sectionbody">
<div class="listingblock smaller">
<div class="content">
<pre class="highlight"><code class="language-java" data-lang="java">public class Item {
  public int value;
  public Item next;
  Item(int setValue, Item setNext) {
    this.value = setValue;
    this.next = setNext;
  }
}
Item items = new Item(0, null);</code></pre>
</div>
</div>
<div style="page-break-after: always;"></div>
<div class="digraph small TB">
  Item [ label = "Item|0" ]
  items -> Item
</div>
</div>
</div>
<div class="sect1 ss">
<h2 id="QGCsOehngugYkACMiMSLsbHMSjAVOkho">Linked Lists</h2>
<div class="sectionbody">
<div class="listingblock smaller">
<div class="content">
<pre class="highlight"><code class="language-java" data-lang="java">public class Item {
  public int value;
  public Item next;
  Item(int setValue, Item setNext) {
    this.value = setValue;
    this.next = setNext;
  }
}
Item items = new Item(0, null);
items = new Item(8, items);</code></pre>
</div>
</div>
<div style="page-break-after: always;"></div>
<div class="digraph small TB mx-auto">
  Item [ label = "Item|0" ]
  Item8 [ label = "Item|8" ]
  items -> Item8
  Item8 -> Item
</div>
</div>
</div>
<div class="sect1 ss">
<h2 id="GtlmuxhzhfUyTAHMaqczUJfMltCOYeMn">Linked Lists</h2>
<div class="sectionbody">
<div class="listingblock smaller">
<div class="content">
<pre class="highlight"><code class="language-java" data-lang="java">public class Item {
  public int value;
  public Item next;
  Item(int setValue, Item setNext) {
    this.value = setValue;
    this.next = setNext;
  }
}
Item items = new Item(0, null);
items = new Item(8, items);
items = new Item(5, items);</code></pre>
</div>
</div>
<div style="page-break-after: always;"></div>
<div class="digraph small TB mx-auto">
  Item [ label = "Item|0" ]
  Item8 [ label = "Item|8" ]
  Item5 [ label = "Item|5" ]
  items -> Item5
  Item5 -> Item8
  Item8 -> Item
</div>
</div>
</div>
<div class="sect1">
<h2 id="TqpqrwnmogqCyDjXoapZgGkybZhBPNVy">Linked Lists: Iteration</h2>
<div class="sectionbody">
<div class="listingblock smaller">
<div class="content">
<pre class="highlight"><code class="language-java" data-lang="java">public class LinkedList {
  private Item start;
}
public class Item {
  public int value;
  public Item next;
}</code></pre>
</div>
</div>
<div class="paragraph lead">
<p>We can iterate through our <code>LinkedList</code> using a <code>for</code> loop.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="nlYljBaffrrPZfYjSwRRokqjNFrUqSkm">! <code>LinkedList</code> <code>for</code></h2>
<div class="sectionbody">
<div class="literalblock janini smallest compiler">
<div class="content">
<pre>public class Item {
  public int value;
  public Item next;
  Item(int setValue, Item setNext) {
    this.value = setValue;
    this.next = setNext;
  }
}
public class LinkedList {
  private Item start;
  public LinkedList(int[] array) {
    for (int i = array.length - 1; i &gt;= 0; i--) {
      this.addToFront(array[i]);
    }
  }
  public void addToFront(int value) {
    start = new Item(value, start);
  }
  public String toString() {
    String string = "";
    Item current = start;
    while (current != null) {
      string += current.value + " ";
      current = current.next;
    }
    return string.trim();
  }
}
public class Example {
  public static void main(String[] unused) {
    LinkedList myList = new LinkedList(new int[] { 1, 2, 3 });
    // Write a for loop using myList
  }
}</pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="JtyGwCLnUwqkqAhWVlTcYzOsTAUtRBQG">Announcements</h2>
<div class="sectionbody">
<div class="ulist">
<ul>
<li>
<p><a href="/MP/4/">MP4</a> is due Friday.</p>
</li>
<li>
<p>We&#8217;ve added an
<a href="https://cs125.cs.illinois.edu/info/feedback/">anonymous feedback form</a>
to the course website. Use it to give us feedback!</p>
</li>
<li>
<p>Continue to communicate with the course staff about the strike as needed.
We&#8217;re trying to keep everything up and running.</p>
</li>
<li>
<p>My office hours continue today at 11AM in the lounge outside of Siebel 0226.</p>
</li>
</ul>
</div>
</div>
</div>